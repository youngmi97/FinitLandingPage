[{"/Users/steven/FinitLandingPage/src/App.js":"1","/Users/steven/FinitLandingPage/src/pages/Card3.js":"2","/Users/steven/FinitLandingPage/src/pages/Card4.js":"3","/Users/steven/FinitLandingPage/src/reportWebVitals.js":"4","/Users/steven/FinitLandingPage/src/pages/Card5.js":"5","/Users/steven/FinitLandingPage/src/pages/Main.js":"6","/Users/steven/FinitLandingPage/src/pages/Card1.js":"7","/Users/steven/FinitLandingPage/src/pages/Card2.js":"8"},{"size":1020,"mtime":1606563811480,"results":"9","hashOfConfig":"10"},{"size":6148,"mtime":1606816210996,"results":"11","hashOfConfig":"10"},{"size":5906,"mtime":1606816216010,"results":"12","hashOfConfig":"10"},{"size":362,"mtime":1606563811484,"results":"13","hashOfConfig":"10"},{"size":4755,"mtime":1606816252762,"results":"14","hashOfConfig":"10"},{"size":7706,"mtime":1606816205906,"results":"15","hashOfConfig":"10"},{"size":5422,"mtime":1606816218117,"results":"16","hashOfConfig":"10"},{"size":5435,"mtime":1606816213537,"results":"17","hashOfConfig":"10"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},"11wfpbq",{"filePath":"21","messages":"22","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"23","messages":"24","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"27","messages":"28","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"29","messages":"30","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"31"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"34"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/Users/steven/FinitLandingPage/src/App.js",[],["37","38"],"/Users/steven/FinitLandingPage/src/pages/Card3.js",["39","40","41","42"],"/Users/steven/FinitLandingPage/src/pages/Card4.js",["43","44","45","46"],"/Users/steven/FinitLandingPage/src/reportWebVitals.js",[],"/Users/steven/FinitLandingPage/src/pages/Card5.js",["47","48","49"],"/Users/steven/FinitLandingPage/src/pages/Main.js",["50","51","52"],"import React, { useState } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Button from \"@material-ui/core/Button\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Input from \"@material-ui/core/Input\";\nimport { Grid } from \"@material-ui/core\";\nimport \"../App.css\";\n\nconst useStyles = makeStyles((theme) => ({\n  textField: {\n    background: \"#ffffff\",\n    width: \"50%\",\n    height: \"56px\",\n    borderRadius: \"4px\",\n    border: \"1px solid #EFEFF4\",\n    boxSizing: \"border-box\",\n    padding: 10,\n  },\n  startButton: {\n    marginLeft: \"16px\",\n    height: \"56px\",\n    width: \"250px\",\n    background: \"#6600FF;\",\n    boxShadow: \"8px 16px 40px rgba(42, 0, 77, 0.3)\",\n    borderRadius: \"6px\",\n    fontStyle: \"normal\",\n    fontWeight: 600,\n    fontSize: \"14px\",\n    lineHeight: \"17px\",\n    /* identical to box height */\n\n    textAlign: \"center\",\n    letterSpacing: \"0.03em\",\n    textTransform: \"uppercase\",\n    \"&:hover\": {\n      background: \"#6600FF;\",\n    },\n  },\n  bigGrid: { width: \"100%\" },\n  bigText: {\n    display: \"flex\",\n    flexDirection: \"column\",\n    alignItems: \"flex-start\",\n    fontStyle: \"normal\",\n    fontWeight: \"bold\",\n    fontSize: \"72px\",\n    lineHeight: \"88px\",\n    /* or 122% */\n    letterSpacing: \"0.02em\",\n    marginLeft: \"100px\",\n  },\n  bigText2: {\n    display: \"flex\",\n    flexDirection: \"column\",\n    alignItems: \"center\",\n    fontStyle: \"normal\",\n    fontWeight: \"bold\",\n    fontSize: \"70px\",\n    lineHeight: \"88px\",\n    /* or 122% */\n    letterSpacing: \"0.02em\",\n  },\n  medText: {\n    display: \"flex\",\n    flexDirection: \"column\",\n    alignItems: \"flex-start\",\n    width: \"100%\",\n    fontStyle: \"normal\",\n    fontWeight: \"normal\",\n    fontSize: \"24px\",\n    lineHeight: \"29px\",\n    marginTop: \"35px\",\n    marginLeft: \"100px\",\n  },\n  medText2: {\n    display: \"flex\",\n    flexDirection: \"column\",\n    alignItems: \"center\",\n    width: \"100%\",\n    fontStyle: \"normal\",\n    fontWeight: \"normal\",\n    fontSize: \"24px\",\n    lineHeight: \"29px\",\n    marginTop: \"35px\",\n  },\n  submitInfo: {\n    width: \"100%\",\n    height: \"100px\",\n  },\n  submitInfoNew: {\n    display: \"flex\",\n    flexDirection: \"row\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    width: \"100%\",\n    padding: \"20px\",\n    marginLeft: \"20px\",\n  },\n\n  submitInfo2: {\n    marginTop: \"35px\",\n    display: \"flex\",\n    flexDirection: \"row\",\n    alignItems: \"flex-start\",\n    verticalAlign: \"middle\",\n    marginLeft: \"100px\",\n  },\n  submitInfo3: {\n    marginTop: \"35px\",\n    display: \"flex\",\n    flexDirection: \"row\",\n    alignItems: \"center\",\n    verticalAlign: \"middle\",\n  },\n  pageMockUp: {\n    float: \"right\",\n    width: \"45%\",\n    position: \"absolute\",\n\n    top: \"80px\",\n    right: \"0px\",\n  },\n  textHolder: {\n    width: \"100%\",\n  },\n  phoneMockUp: {\n    float: \"right\",\n    position: \"absolute\",\n    top: \"210px\",\n    right: \"365px\",\n  },\n  mockUpGrid: {\n    width: \"100%\",\n  },\n}));\n\nfunction Main(props) {\n  const classes = useStyles();\n\n  const [email, setEmail] = useState(\"\");\n  const [btnDisabled, setBtnDisabled] = useState(true);\n  const [innerWidth, setInnerWidth] = useState(window.innerWidth);\n\n  function handleResize(e) {\n    setInnerWidth(window.innerWidth);\n    console.log(\"width\", innerWidth);\n  }\n\n  window.addEventListener(\"resize\", handleResize);\n\n  function isValidEmailAddress(address) {\n    return !!address.match(/.+@.+/);\n  }\n\n  function openForm() {\n    window.open(\"https://sureplus.typeform.com/to/A0mG6n8u\");\n  }\n\n  function checkEmail(e) {\n    console.log(\"email value\", e.target.value);\n    if (isValidEmailAddress(e.target.value)) {\n      setBtnDisabled(false);\n    } else {\n      setBtnDisabled(true);\n    }\n  }\n\n  const isWeb = innerWidth >= 1000;\n  const view = isWeb ? (\n    <div style={{ width: \"100%\" }}>\n      <Grid\n        container\n        className={classes.bigGrid}\n        direction=\"row\"\n        justify=\"center\"\n        alignItems=\"center\"\n        xs={12}\n      >\n        <Grid item className={classes.textHolder} direction=\"column\" xs={6}>\n          <div className={classes.bigText}>\n            <div>Subscriptions</div>\n            <div>made easy</div>\n          </div>\n          <div className={classes.medText}>\n            <div>Add, make changes and cancel</div>\n            <div>subscriptions in one place</div>\n          </div>\n          <div className={classes.submitInfo}>\n            <Grid\n              item\n              className={classes.submitInfo2}\n              direction=\"row\"\n              xs={12}\n              spacing={3}\n            >\n              {/* <TextField\n                className={classes.textField}\n                id=\"outlined-basic\"\n                label=\"Email\"\n                type=\"email\"\n                errorText={\"Please enter a valid email\"}\n                onChange={checkEmail}\n                variant=\"outlined\"\n              /> */}\n              <Input\n                className={classes.textField}\n                placeholder=\"Email\"\n                type=\"email\"\n                disableUnderline={true}\n                onChange={checkEmail}\n              />\n              <Button\n                className={classes.startButton}\n                onClick={openForm}\n                variant=\"contained\"\n                color=\"primary\"\n                disabled={btnDisabled}\n              >\n                ↗︎ Apply for Beta Access\n              </Button>\n            </Grid>\n          </div>\n        </Grid>\n        <Grid\n          container\n          className={classes.mockUpGrid}\n          direction=\"row\"\n          justify=\"center\"\n          alignItems=\"center\"\n          xs={6}\n        >\n          <img\n            className={classes.pageMockUp}\n            src=\"/mockUpGroup2.png\"\n            alt=\"mockPage\"\n          ></img>\n          {/* <img\n            className={classes.phoneMockUp}\n            src=\"/phoneMockUp.png\"\n            alt=\"mockPhone\"\n          ></img> */}\n        </Grid>\n      </Grid>\n    </div>\n  ) : (\n    <div style={{ width: \"100%\" }}>\n      <Grid\n        container\n        className={classes.bigGrid}\n        direction=\"column\"\n        justify=\"center\"\n        alignItems=\"center\"\n        xs={12}\n      >\n        <Grid item className={classes.textHolder} direction=\"column\" xs={12}>\n          <div className={classes.bigText2}>\n            <div>Subscriptions</div>\n            <div>made easy</div>\n          </div>\n          <div className={classes.medText2}>\n            <div>Add, make changes and cancel</div>\n            <div>subscriptions in one place</div>\n          </div>\n          <div className={classes.submitInfoNew}>\n            <Grid\n              item\n              className={classes.submitInfo3}\n              direction=\"row\"\n              xs={12}\n              spacing={3}\n            >\n              {/* <TextField\n                className={classes.textField}\n                id=\"outlined-basic\"\n                label=\"Email\"\n                type=\"email\"\n                errorText={\"Please enter a valid email\"}\n                onChange={checkEmail}\n                variant=\"outlined\"\n              /> */}\n              <Input\n                className={classes.textField}\n                placeholder=\"Email\"\n                type=\"email\"\n                disableUnderline={true}\n                onChange={checkEmail}\n              />\n              <Button\n                className={classes.startButton}\n                onClick={openForm}\n                variant=\"contained\"\n                color=\"primary\"\n                disabled={btnDisabled}\n              >\n                GET STARTED\n              </Button>\n            </Grid>\n          </div>\n        </Grid>\n      </Grid>\n    </div>\n  );\n\n  return view;\n}\n\nexport default Main;\n","/Users/steven/FinitLandingPage/src/pages/Card1.js",["53","54","55","56"],"import React, { useState } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Button from \"@material-ui/core/Button\";\nimport TextField from \"@material-ui/core/TextField\";\nimport { Grid } from \"@material-ui/core\";\nimport \"../App.css\";\n\nconst useStyles = makeStyles((theme) => ({\n  textField: {\n    background: \"#ffffff\",\n    width: \"366px\",\n    height: \"56px\",\n    borderRadius: \"4px\",\n    border: \"1px solid #EFEFF4\",\n    boxSizing: \"border-box\",\n  },\n  startButton: {\n    marginLeft: \"16px\",\n    height: \"56px\",\n    width: \"133px\",\n    background: \"#6600FF;\",\n    boxShadow: \"8px 16px 40px rgba(42, 0, 77, 0.3)\",\n    borderRadius: \"6px\",\n    fontStyle: \"normal\",\n    fontWeight: 600,\n    fontSize: \"12px\",\n    lineHeight: \"17px\",\n    /* identical to box height */\n\n    textAlign: \"center\",\n    letterSpacing: \"0.03em\",\n    textTransform: \"uppercase\",\n  },\n  bigGrid: { width: \"100%\", margin: 0, padding: 0 },\n  bigText: {\n    display: \"flex\",\n    flexDirection: \"column\",\n    alignItems: \"flex-start\",\n    fontStyle: \"normal\",\n    fontWeight: \"bold\",\n    fontSize: \"50px\",\n    lineHeight: \"88px\",\n    /* or 122% */\n    letterSpacing: \"0.02em\",\n  },\n  bigText2: {\n    display: \"flex\",\n    width: \"90%\",\n    flexDirection: \"column\",\n    alignItems: \"center\",\n    fontStyle: \"normal\",\n    fontWeight: \"bold\",\n    fontSize: \"50px\",\n    lineHeight: \"88px\",\n    marginLeft: \"20px\",\n    /* or 122% */\n    letterSpacing: \"0.02em\",\n  },\n  medText: {\n    display: \"flex\",\n    flexDirection: \"column\",\n    alignItems: \"flex-start\",\n    width: \"100%\",\n    fontStyle: \"normal\",\n    fontWeight: \"normal\",\n    fontSize: \"24px\",\n    lineHeight: \"29px\",\n    marginTop: \"35px\",\n    color: \"#18022E\",\n  },\n  medText2: {\n    display: \"flex\",\n    flexDirection: \"column\",\n    alignItems: \"center\",\n    width: \"90%\",\n    fontStyle: \"normal\",\n    fontWeight: \"normal\",\n    fontSize: \"24px\",\n    marginLeft: \"20px\",\n    lineHeight: \"29px\",\n    marginTop: \"35px\",\n    color: \"#18022E\",\n  },\n  submitInfo: {\n    width: \"100%\",\n    height: \"100px\",\n  },\n  submitInfo2: {\n    marginTop: \"35px\",\n    display: \"flex\",\n    flexDirection: \"row\",\n    alignItems: \"flex-start\",\n    verticalAlign: \"middle\",\n    marginLeft: \"100px\",\n  },\n  pageMockUp: {\n    position: \"absolute\",\n    top: \"100vh\" + \"80px\",\n    width: \"35%\",\n    paddingRight: 92,\n  },\n  pageMockUp2: {\n    position: \"relative\",\n    top: \"100vh\" + \"80px\",\n    width: \"80%\",\n    alignContent: \"center\",\n    marginRight: \"50px\",\n    marginTop: \"50px\",\n  },\n  textHolder: {\n    width: \"100%\",\n  },\n  mockUpGrid: {\n    width: \"100%\",\n  },\n  mockUpGrid2: {\n    width: \"100%\",\n    float: \"center\",\n    alignContent: \"center\",\n  },\n}));\n\nfunction Card1() {\n  const classes = useStyles();\n\n  const [innerWidth, setInnerWidth] = useState(window.innerWidth);\n\n  function handleResize(e) {\n    setInnerWidth(window.innerWidth);\n    console.log(\"width\", innerWidth);\n  }\n\n  window.addEventListener(\"resize\", handleResize);\n\n  const isWeb = innerWidth >= 700;\n  const view = isWeb ? (\n    <div style={{ width: \"100%\" }}>\n      <Grid\n        container\n        className={classes.bigGrid}\n        direction=\"row\"\n        justify=\"center\"\n        alignItems=\"center\"\n        xs={12}\n        style={{ margin: 0, padding: 0 }}\n      >\n        <Grid\n          container\n          className={classes.mockUpGrid}\n          direction=\"row\"\n          justify=\"flex-end\"\n          alignItems=\"center\"\n          xs={6}\n          style={{ margin: 0, padding: 0 }}\n        >\n          <img\n            className={classes.pageMockUp}\n            src=\"/Group 191.png\"\n            alt=\"mockPage\"\n          ></img>\n        </Grid>\n        <Grid\n          item\n          className={classes.textHolder}\n          direction=\"column\"\n          xs={6}\n          style={{ margin: 0, padding: 0 }}\n        >\n          <div className={classes.bigText}>\n            <div>Full Visibility</div>\n          </div>\n          <div className={classes.medText}>\n            <div>Automatically link your subscriptions and get a full</div>\n            <div>picture of what subscriptions you are currently using.</div>\n          </div>\n        </Grid>\n      </Grid>\n    </div>\n  ) : (\n    <div style={{ width: \"100%\", alignContent: \"center\" }}>\n      <Grid\n        container\n        className={classes.bigGrid}\n        direction=\"column\"\n        justify=\"center\"\n        alignItems=\"center\"\n        xs={12}\n        style={{ margin: 0, padding: 0 }}\n      >\n        <Grid\n          item\n          className={classes.textHolder}\n          direction=\"column\"\n          xs={12}\n          style={{ margin: 0, padding: 0 }}\n        >\n          <div className={classes.bigText2}>\n            <div>Full Visibility</div>\n          </div>\n          <div className={classes.medText2}>\n            <div>Automatically link your subscriptions and get a full</div>\n            <div>picture of what subscriptions you are currently using.</div>\n          </div>\n        </Grid>\n        <Grid\n          container\n          className={classes.mockUpGrid2}\n          direction=\"row\"\n          justify=\"flex-end\"\n          alignItems=\"center\"\n          xs={12}\n          style={{ margin: 0, padding: 0 }}\n        >\n          <img\n            className={classes.pageMockUp2}\n            src=\"/Group191.png\"\n            alt=\"mockPage\"\n          ></img>\n        </Grid>\n      </Grid>\n    </div>\n  );\n  return view;\n}\n\nexport default Card1;\n","/Users/steven/FinitLandingPage/src/pages/Card2.js",["57","58","59","60"],{"ruleId":"61","replacedBy":"62"},{"ruleId":"63","replacedBy":"64"},{"ruleId":"65","severity":1,"message":"66","line":3,"column":8,"nodeType":"67","messageId":"68","endLine":3,"endColumn":14},{"ruleId":"65","severity":1,"message":"69","line":4,"column":8,"nodeType":"67","messageId":"68","endLine":4,"endColumn":17},{"ruleId":"70","severity":1,"message":"71","line":87,"column":18,"nodeType":"72","messageId":"73","endLine":87,"endColumn":19},{"ruleId":"70","severity":1,"message":"71","line":112,"column":18,"nodeType":"72","messageId":"73","endLine":112,"endColumn":19},{"ruleId":"65","severity":1,"message":"66","line":3,"column":8,"nodeType":"67","messageId":"68","endLine":3,"endColumn":14},{"ruleId":"65","severity":1,"message":"69","line":4,"column":8,"nodeType":"67","messageId":"68","endLine":4,"endColumn":17},{"ruleId":"70","severity":1,"message":"71","line":87,"column":18,"nodeType":"72","messageId":"73","endLine":87,"endColumn":19},{"ruleId":"70","severity":1,"message":"71","line":106,"column":18,"nodeType":"72","messageId":"73","endLine":106,"endColumn":19},{"ruleId":"65","severity":1,"message":"69","line":4,"column":8,"nodeType":"67","messageId":"68","endLine":4,"endColumn":17},{"ruleId":"70","severity":1,"message":"71","line":65,"column":18,"nodeType":"72","messageId":"73","endLine":65,"endColumn":19},{"ruleId":"70","severity":1,"message":"71","line":84,"column":18,"nodeType":"72","messageId":"73","endLine":84,"endColumn":19},{"ruleId":"65","severity":1,"message":"69","line":4,"column":8,"nodeType":"67","messageId":"68","endLine":4,"endColumn":17},{"ruleId":"65","severity":1,"message":"74","line":140,"column":10,"nodeType":"67","messageId":"68","endLine":140,"endColumn":15},{"ruleId":"65","severity":1,"message":"75","line":140,"column":17,"nodeType":"67","messageId":"68","endLine":140,"endColumn":25},{"ruleId":"65","severity":1,"message":"66","line":3,"column":8,"nodeType":"67","messageId":"68","endLine":3,"endColumn":14},{"ruleId":"65","severity":1,"message":"69","line":4,"column":8,"nodeType":"67","messageId":"68","endLine":4,"endColumn":17},{"ruleId":"70","severity":1,"message":"71","line":98,"column":18,"nodeType":"72","messageId":"73","endLine":98,"endColumn":19},{"ruleId":"70","severity":1,"message":"71","line":104,"column":18,"nodeType":"72","messageId":"73","endLine":104,"endColumn":19},{"ruleId":"65","severity":1,"message":"66","line":3,"column":8,"nodeType":"67","messageId":"68","endLine":3,"endColumn":14},{"ruleId":"65","severity":1,"message":"69","line":4,"column":8,"nodeType":"67","messageId":"68","endLine":4,"endColumn":17},{"ruleId":"70","severity":1,"message":"71","line":72,"column":18,"nodeType":"72","messageId":"73","endLine":72,"endColumn":19},{"ruleId":"70","severity":1,"message":"71","line":89,"column":18,"nodeType":"72","messageId":"73","endLine":89,"endColumn":19},"no-native-reassign",["76"],"no-negated-in-lhs",["77"],"no-unused-vars","'Button' is defined but never used.","Identifier","unusedVar","'TextField' is defined but never used.","no-useless-concat","Unexpected string concatenation of literals.","BinaryExpression","unexpectedConcat","'email' is assigned a value but never used.","'setEmail' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]